// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

package org.apache.flink.formats.protobuf.generated;

public final class UserProtobuf {
  private UserProtobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code org.apache.flink.formats.protobuf.generated.Colors}
   */
  public enum Colors
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RED = 0;</code>
     */
    RED(0, 0),
    /**
     * <code>GREEN = 1;</code>
     */
    GREEN(1, 1),
    /**
     * <code>BLUE = 2;</code>
     */
    BLUE(2, 2),
    ;

    /**
     * <code>RED = 0;</code>
     */
    public static final int RED_VALUE = 0;
    /**
     * <code>GREEN = 1;</code>
     */
    public static final int GREEN_VALUE = 1;
    /**
     * <code>BLUE = 2;</code>
     */
    public static final int BLUE_VALUE = 2;


    public final int getNumber() { return value; }

    public static Colors valueOf(int value) {
      switch (value) {
        case 0: return RED;
        case 1: return GREEN;
        case 2: return BLUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Colors>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Colors>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Colors>() {
            public Colors findValueByNumber(int number) {
              return Colors.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.getDescriptor().getEnumTypes().get(0);
    }

    private static final Colors[] VALUES = values();

    public static Colors valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Colors(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.apache.flink.formats.protobuf.generated.Colors)
  }

  public interface UserOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 favorite_number = 2;
    /**
     * <code>optional int32 favorite_number = 2;</code>
     */
    boolean hasFavoriteNumber();
    /**
     * <code>optional int32 favorite_number = 2;</code>
     */
    int getFavoriteNumber();

    // optional string favorite_color = 3;
    /**
     * <code>optional string favorite_color = 3;</code>
     */
    boolean hasFavoriteColor();
    /**
     * <code>optional string favorite_color = 3;</code>
     */
    java.lang.String getFavoriteColor();
    /**
     * <code>optional string favorite_color = 3;</code>
     */
    com.google.protobuf.ByteString
        getFavoriteColorBytes();

    // optional int64 type_long_test = 4;
    /**
     * <code>optional int64 type_long_test = 4;</code>
     */
    boolean hasTypeLongTest();
    /**
     * <code>optional int64 type_long_test = 4;</code>
     */
    long getTypeLongTest();

    // required double type_double_test = 5;
    /**
     * <code>required double type_double_test = 5;</code>
     */
    boolean hasTypeDoubleTest();
    /**
     * <code>required double type_double_test = 5;</code>
     */
    double getTypeDoubleTest();

    // optional bool type_bool_test = 6;
    /**
     * <code>optional bool type_bool_test = 6;</code>
     */
    boolean hasTypeBoolTest();
    /**
     * <code>optional bool type_bool_test = 6;</code>
     */
    boolean getTypeBoolTest();

    // repeated string type_array_string = 7;
    /**
     * <code>repeated string type_array_string = 7;</code>
     */
    java.util.List<java.lang.String>
    getTypeArrayStringList();
    /**
     * <code>repeated string type_array_string = 7;</code>
     */
    int getTypeArrayStringCount();
    /**
     * <code>repeated string type_array_string = 7;</code>
     */
    java.lang.String getTypeArrayString(int index);
    /**
     * <code>repeated string type_array_string = 7;</code>
     */
    com.google.protobuf.ByteString
        getTypeArrayStringBytes(int index);

    // repeated bool type_array_boolean = 8;
    /**
     * <code>repeated bool type_array_boolean = 8;</code>
     */
    java.util.List<java.lang.Boolean> getTypeArrayBooleanList();
    /**
     * <code>repeated bool type_array_boolean = 8;</code>
     */
    int getTypeArrayBooleanCount();
    /**
     * <code>repeated bool type_array_boolean = 8;</code>
     */
    boolean getTypeArrayBoolean(int index);

    // required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;</code>
     */
    boolean hasTypeEnum();
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;</code>
     */
    org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors getTypeEnum();

    // repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    java.util.List<org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry> 
        getTypeMapList();
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry getTypeMap(int index);
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    int getTypeMapCount();
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    java.util.List<? extends org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder> 
        getTypeMapOrBuilderList();
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder getTypeMapOrBuilder(
        int index);

    // required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
     */
    boolean hasTypeUnion();
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
     */
    org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue getTypeUnion();
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
     */
    org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValueOrBuilder getTypeUnionOrBuilder();

    // optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;
    /**
     * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
     */
    boolean hasTypeNested();
    /**
     * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
     */
    org.apache.flink.formats.protobuf.generated.UserProtobuf.Address getTypeNested();
    /**
     * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
     */
    org.apache.flink.formats.protobuf.generated.UserProtobuf.AddressOrBuilder getTypeNestedOrBuilder();

    // required bytes type_bytes = 13;
    /**
     * <code>required bytes type_bytes = 13;</code>
     */
    boolean hasTypeBytes();
    /**
     * <code>required bytes type_bytes = 13;</code>
     */
    com.google.protobuf.ByteString getTypeBytes();
  }
  /**
   * Protobuf type {@code org.apache.flink.formats.protobuf.generated.User}
   */
  public static final class User extends
      com.google.protobuf.GeneratedMessage
      implements UserOrBuilder {
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private User(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final User defaultInstance;
    public static User getDefaultInstance() {
      return defaultInstance;
    }

    public User getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              favoriteNumber_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              favoriteColor_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              typeLongTest_ = input.readInt64();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              typeDoubleTest_ = input.readDouble();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              typeBoolTest_ = input.readBool();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                typeArrayString_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000040;
              }
              typeArrayString_.add(input.readBytes());
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                typeArrayBoolean_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              typeArrayBoolean_.add(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                typeArrayBoolean_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                typeArrayBoolean_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors value = org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                typeEnum_ = value;
              }
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                typeMap_ = new java.util.ArrayList<org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry>();
                mutable_bitField0_ |= 0x00000200;
              }
              typeMap_.add(input.readMessage(org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = typeUnion_.toBuilder();
              }
              typeUnion_ = input.readMessage(org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(typeUnion_);
                typeUnion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 98: {
              org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = typeNested_.toBuilder();
              }
              typeNested_ = input.readMessage(org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(typeNested_);
                typeNested_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 106: {
              bitField0_ |= 0x00000200;
              typeBytes_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          typeArrayString_ = new com.google.protobuf.UnmodifiableLazyStringList(typeArrayString_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          typeArrayBoolean_ = java.util.Collections.unmodifiableList(typeArrayBoolean_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          typeMap_ = java.util.Collections.unmodifiableList(typeMap_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_User_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.flink.formats.protobuf.generated.UserProtobuf.User.class, org.apache.flink.formats.protobuf.generated.UserProtobuf.User.Builder.class);
    }

    public static com.google.protobuf.Parser<User> PARSER =
        new com.google.protobuf.AbstractParser<User>() {
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 favorite_number = 2;
    public static final int FAVORITE_NUMBER_FIELD_NUMBER = 2;
    private int favoriteNumber_;
    /**
     * <code>optional int32 favorite_number = 2;</code>
     */
    public boolean hasFavoriteNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 favorite_number = 2;</code>
     */
    public int getFavoriteNumber() {
      return favoriteNumber_;
    }

    // optional string favorite_color = 3;
    public static final int FAVORITE_COLOR_FIELD_NUMBER = 3;
    private java.lang.Object favoriteColor_;
    /**
     * <code>optional string favorite_color = 3;</code>
     */
    public boolean hasFavoriteColor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string favorite_color = 3;</code>
     */
    public java.lang.String getFavoriteColor() {
      java.lang.Object ref = favoriteColor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          favoriteColor_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string favorite_color = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFavoriteColorBytes() {
      java.lang.Object ref = favoriteColor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        favoriteColor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 type_long_test = 4;
    public static final int TYPE_LONG_TEST_FIELD_NUMBER = 4;
    private long typeLongTest_;
    /**
     * <code>optional int64 type_long_test = 4;</code>
     */
    public boolean hasTypeLongTest() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 type_long_test = 4;</code>
     */
    public long getTypeLongTest() {
      return typeLongTest_;
    }

    // required double type_double_test = 5;
    public static final int TYPE_DOUBLE_TEST_FIELD_NUMBER = 5;
    private double typeDoubleTest_;
    /**
     * <code>required double type_double_test = 5;</code>
     */
    public boolean hasTypeDoubleTest() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double type_double_test = 5;</code>
     */
    public double getTypeDoubleTest() {
      return typeDoubleTest_;
    }

    // optional bool type_bool_test = 6;
    public static final int TYPE_BOOL_TEST_FIELD_NUMBER = 6;
    private boolean typeBoolTest_;
    /**
     * <code>optional bool type_bool_test = 6;</code>
     */
    public boolean hasTypeBoolTest() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool type_bool_test = 6;</code>
     */
    public boolean getTypeBoolTest() {
      return typeBoolTest_;
    }

    // repeated string type_array_string = 7;
    public static final int TYPE_ARRAY_STRING_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList typeArrayString_;
    /**
     * <code>repeated string type_array_string = 7;</code>
     */
    public java.util.List<java.lang.String>
        getTypeArrayStringList() {
      return typeArrayString_;
    }
    /**
     * <code>repeated string type_array_string = 7;</code>
     */
    public int getTypeArrayStringCount() {
      return typeArrayString_.size();
    }
    /**
     * <code>repeated string type_array_string = 7;</code>
     */
    public java.lang.String getTypeArrayString(int index) {
      return typeArrayString_.get(index);
    }
    /**
     * <code>repeated string type_array_string = 7;</code>
     */
    public com.google.protobuf.ByteString
        getTypeArrayStringBytes(int index) {
      return typeArrayString_.getByteString(index);
    }

    // repeated bool type_array_boolean = 8;
    public static final int TYPE_ARRAY_BOOLEAN_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Boolean> typeArrayBoolean_;
    /**
     * <code>repeated bool type_array_boolean = 8;</code>
     */
    public java.util.List<java.lang.Boolean>
        getTypeArrayBooleanList() {
      return typeArrayBoolean_;
    }
    /**
     * <code>repeated bool type_array_boolean = 8;</code>
     */
    public int getTypeArrayBooleanCount() {
      return typeArrayBoolean_.size();
    }
    /**
     * <code>repeated bool type_array_boolean = 8;</code>
     */
    public boolean getTypeArrayBoolean(int index) {
      return typeArrayBoolean_.get(index);
    }

    // required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;
    public static final int TYPE_ENUM_FIELD_NUMBER = 9;
    private org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors typeEnum_;
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;</code>
     */
    public boolean hasTypeEnum() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;</code>
     */
    public org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors getTypeEnum() {
      return typeEnum_;
    }

    // repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;
    public static final int TYPE_MAP_FIELD_NUMBER = 10;
    private java.util.List<org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry> typeMap_;
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    public java.util.List<org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry> getTypeMapList() {
      return typeMap_;
    }
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    public java.util.List<? extends org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder> 
        getTypeMapOrBuilderList() {
      return typeMap_;
    }
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    public int getTypeMapCount() {
      return typeMap_.size();
    }
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry getTypeMap(int index) {
      return typeMap_.get(index);
    }
    /**
     * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
     */
    public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder getTypeMapOrBuilder(
        int index) {
      return typeMap_.get(index);
    }

    // required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;
    public static final int TYPE_UNION_FIELD_NUMBER = 11;
    private org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue typeUnion_;
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
     */
    public boolean hasTypeUnion() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
     */
    public org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue getTypeUnion() {
      return typeUnion_;
    }
    /**
     * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
     */
    public org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValueOrBuilder getTypeUnionOrBuilder() {
      return typeUnion_;
    }

    // optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;
    public static final int TYPE_NESTED_FIELD_NUMBER = 12;
    private org.apache.flink.formats.protobuf.generated.UserProtobuf.Address typeNested_;
    /**
     * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
     */
    public boolean hasTypeNested() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
     */
    public org.apache.flink.formats.protobuf.generated.UserProtobuf.Address getTypeNested() {
      return typeNested_;
    }
    /**
     * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
     */
    public org.apache.flink.formats.protobuf.generated.UserProtobuf.AddressOrBuilder getTypeNestedOrBuilder() {
      return typeNested_;
    }

    // required bytes type_bytes = 13;
    public static final int TYPE_BYTES_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString typeBytes_;
    /**
     * <code>required bytes type_bytes = 13;</code>
     */
    public boolean hasTypeBytes() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required bytes type_bytes = 13;</code>
     */
    public com.google.protobuf.ByteString getTypeBytes() {
      return typeBytes_;
    }

    private void initFields() {
      name_ = "";
      favoriteNumber_ = 0;
      favoriteColor_ = "";
      typeLongTest_ = 0L;
      typeDoubleTest_ = 0D;
      typeBoolTest_ = false;
      typeArrayString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      typeArrayBoolean_ = java.util.Collections.emptyList();
      typeEnum_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors.RED;
      typeMap_ = java.util.Collections.emptyList();
      typeUnion_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.getDefaultInstance();
      typeNested_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.getDefaultInstance();
      typeBytes_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTypeDoubleTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTypeEnum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTypeUnion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTypeBytes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTypeMapCount(); i++) {
        if (!getTypeMap(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTypeNested()) {
        if (!getTypeNested().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, favoriteNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFavoriteColorBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, typeLongTest_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, typeDoubleTest_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, typeBoolTest_);
      }
      for (int i = 0; i < typeArrayString_.size(); i++) {
        output.writeBytes(7, typeArrayString_.getByteString(i));
      }
      for (int i = 0; i < typeArrayBoolean_.size(); i++) {
        output.writeBool(8, typeArrayBoolean_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(9, typeEnum_.getNumber());
      }
      for (int i = 0; i < typeMap_.size(); i++) {
        output.writeMessage(10, typeMap_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(11, typeUnion_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(12, typeNested_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(13, typeBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, favoriteNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFavoriteColorBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, typeLongTest_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, typeDoubleTest_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, typeBoolTest_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < typeArrayString_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(typeArrayString_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getTypeArrayStringList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getTypeArrayBooleanList().size();
        size += dataSize;
        size += 1 * getTypeArrayBooleanList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, typeEnum_.getNumber());
      }
      for (int i = 0; i < typeMap_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, typeMap_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, typeUnion_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, typeNested_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, typeBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.apache.flink.formats.protobuf.generated.UserProtobuf.User prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.formats.protobuf.generated.User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.apache.flink.formats.protobuf.generated.UserProtobuf.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_User_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.flink.formats.protobuf.generated.UserProtobuf.User.class, org.apache.flink.formats.protobuf.generated.UserProtobuf.User.Builder.class);
      }

      // Construct using org.apache.flink.formats.protobuf.generated.UserProtobuf.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeMapFieldBuilder();
          getTypeUnionFieldBuilder();
          getTypeNestedFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        favoriteNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        favoriteColor_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        typeLongTest_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        typeDoubleTest_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        typeBoolTest_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        typeArrayString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        typeArrayBoolean_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        typeEnum_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors.RED;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (typeMapBuilder_ == null) {
          typeMap_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          typeMapBuilder_.clear();
        }
        if (typeUnionBuilder_ == null) {
          typeUnion_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.getDefaultInstance();
        } else {
          typeUnionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (typeNestedBuilder_ == null) {
          typeNested_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.getDefaultInstance();
        } else {
          typeNestedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        typeBytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_User_descriptor;
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.User getDefaultInstanceForType() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.User.getDefaultInstance();
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.User build() {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.User buildPartial() {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.User result = new org.apache.flink.formats.protobuf.generated.UserProtobuf.User(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.favoriteNumber_ = favoriteNumber_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.favoriteColor_ = favoriteColor_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.typeLongTest_ = typeLongTest_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.typeDoubleTest_ = typeDoubleTest_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.typeBoolTest_ = typeBoolTest_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          typeArrayString_ = new com.google.protobuf.UnmodifiableLazyStringList(
              typeArrayString_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.typeArrayString_ = typeArrayString_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          typeArrayBoolean_ = java.util.Collections.unmodifiableList(typeArrayBoolean_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.typeArrayBoolean_ = typeArrayBoolean_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.typeEnum_ = typeEnum_;
        if (typeMapBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            typeMap_ = java.util.Collections.unmodifiableList(typeMap_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.typeMap_ = typeMap_;
        } else {
          result.typeMap_ = typeMapBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        if (typeUnionBuilder_ == null) {
          result.typeUnion_ = typeUnion_;
        } else {
          result.typeUnion_ = typeUnionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        if (typeNestedBuilder_ == null) {
          result.typeNested_ = typeNested_;
        } else {
          result.typeNested_ = typeNestedBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.typeBytes_ = typeBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.flink.formats.protobuf.generated.UserProtobuf.User) {
          return mergeFrom((org.apache.flink.formats.protobuf.generated.UserProtobuf.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.flink.formats.protobuf.generated.UserProtobuf.User other) {
        if (other == org.apache.flink.formats.protobuf.generated.UserProtobuf.User.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasFavoriteNumber()) {
          setFavoriteNumber(other.getFavoriteNumber());
        }
        if (other.hasFavoriteColor()) {
          bitField0_ |= 0x00000004;
          favoriteColor_ = other.favoriteColor_;
          onChanged();
        }
        if (other.hasTypeLongTest()) {
          setTypeLongTest(other.getTypeLongTest());
        }
        if (other.hasTypeDoubleTest()) {
          setTypeDoubleTest(other.getTypeDoubleTest());
        }
        if (other.hasTypeBoolTest()) {
          setTypeBoolTest(other.getTypeBoolTest());
        }
        if (!other.typeArrayString_.isEmpty()) {
          if (typeArrayString_.isEmpty()) {
            typeArrayString_ = other.typeArrayString_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureTypeArrayStringIsMutable();
            typeArrayString_.addAll(other.typeArrayString_);
          }
          onChanged();
        }
        if (!other.typeArrayBoolean_.isEmpty()) {
          if (typeArrayBoolean_.isEmpty()) {
            typeArrayBoolean_ = other.typeArrayBoolean_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureTypeArrayBooleanIsMutable();
            typeArrayBoolean_.addAll(other.typeArrayBoolean_);
          }
          onChanged();
        }
        if (other.hasTypeEnum()) {
          setTypeEnum(other.getTypeEnum());
        }
        if (typeMapBuilder_ == null) {
          if (!other.typeMap_.isEmpty()) {
            if (typeMap_.isEmpty()) {
              typeMap_ = other.typeMap_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureTypeMapIsMutable();
              typeMap_.addAll(other.typeMap_);
            }
            onChanged();
          }
        } else {
          if (!other.typeMap_.isEmpty()) {
            if (typeMapBuilder_.isEmpty()) {
              typeMapBuilder_.dispose();
              typeMapBuilder_ = null;
              typeMap_ = other.typeMap_;
              bitField0_ = (bitField0_ & ~0x00000200);
              typeMapBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTypeMapFieldBuilder() : null;
            } else {
              typeMapBuilder_.addAllMessages(other.typeMap_);
            }
          }
        }
        if (other.hasTypeUnion()) {
          mergeTypeUnion(other.getTypeUnion());
        }
        if (other.hasTypeNested()) {
          mergeTypeNested(other.getTypeNested());
        }
        if (other.hasTypeBytes()) {
          setTypeBytes(other.getTypeBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasTypeDoubleTest()) {
          
          return false;
        }
        if (!hasTypeEnum()) {
          
          return false;
        }
        if (!hasTypeUnion()) {
          
          return false;
        }
        if (!hasTypeBytes()) {
          
          return false;
        }
        for (int i = 0; i < getTypeMapCount(); i++) {
          if (!getTypeMap(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasTypeNested()) {
          if (!getTypeNested().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.flink.formats.protobuf.generated.UserProtobuf.User) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 favorite_number = 2;
      private int favoriteNumber_ ;
      /**
       * <code>optional int32 favorite_number = 2;</code>
       */
      public boolean hasFavoriteNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 favorite_number = 2;</code>
       */
      public int getFavoriteNumber() {
        return favoriteNumber_;
      }
      /**
       * <code>optional int32 favorite_number = 2;</code>
       */
      public Builder setFavoriteNumber(int value) {
        bitField0_ |= 0x00000002;
        favoriteNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 favorite_number = 2;</code>
       */
      public Builder clearFavoriteNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        favoriteNumber_ = 0;
        onChanged();
        return this;
      }

      // optional string favorite_color = 3;
      private java.lang.Object favoriteColor_ = "";
      /**
       * <code>optional string favorite_color = 3;</code>
       */
      public boolean hasFavoriteColor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string favorite_color = 3;</code>
       */
      public java.lang.String getFavoriteColor() {
        java.lang.Object ref = favoriteColor_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          favoriteColor_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string favorite_color = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFavoriteColorBytes() {
        java.lang.Object ref = favoriteColor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          favoriteColor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string favorite_color = 3;</code>
       */
      public Builder setFavoriteColor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        favoriteColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string favorite_color = 3;</code>
       */
      public Builder clearFavoriteColor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        favoriteColor_ = getDefaultInstance().getFavoriteColor();
        onChanged();
        return this;
      }
      /**
       * <code>optional string favorite_color = 3;</code>
       */
      public Builder setFavoriteColorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        favoriteColor_ = value;
        onChanged();
        return this;
      }

      // optional int64 type_long_test = 4;
      private long typeLongTest_ ;
      /**
       * <code>optional int64 type_long_test = 4;</code>
       */
      public boolean hasTypeLongTest() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 type_long_test = 4;</code>
       */
      public long getTypeLongTest() {
        return typeLongTest_;
      }
      /**
       * <code>optional int64 type_long_test = 4;</code>
       */
      public Builder setTypeLongTest(long value) {
        bitField0_ |= 0x00000008;
        typeLongTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 type_long_test = 4;</code>
       */
      public Builder clearTypeLongTest() {
        bitField0_ = (bitField0_ & ~0x00000008);
        typeLongTest_ = 0L;
        onChanged();
        return this;
      }

      // required double type_double_test = 5;
      private double typeDoubleTest_ ;
      /**
       * <code>required double type_double_test = 5;</code>
       */
      public boolean hasTypeDoubleTest() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double type_double_test = 5;</code>
       */
      public double getTypeDoubleTest() {
        return typeDoubleTest_;
      }
      /**
       * <code>required double type_double_test = 5;</code>
       */
      public Builder setTypeDoubleTest(double value) {
        bitField0_ |= 0x00000010;
        typeDoubleTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double type_double_test = 5;</code>
       */
      public Builder clearTypeDoubleTest() {
        bitField0_ = (bitField0_ & ~0x00000010);
        typeDoubleTest_ = 0D;
        onChanged();
        return this;
      }

      // optional bool type_bool_test = 6;
      private boolean typeBoolTest_ ;
      /**
       * <code>optional bool type_bool_test = 6;</code>
       */
      public boolean hasTypeBoolTest() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool type_bool_test = 6;</code>
       */
      public boolean getTypeBoolTest() {
        return typeBoolTest_;
      }
      /**
       * <code>optional bool type_bool_test = 6;</code>
       */
      public Builder setTypeBoolTest(boolean value) {
        bitField0_ |= 0x00000020;
        typeBoolTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool type_bool_test = 6;</code>
       */
      public Builder clearTypeBoolTest() {
        bitField0_ = (bitField0_ & ~0x00000020);
        typeBoolTest_ = false;
        onChanged();
        return this;
      }

      // repeated string type_array_string = 7;
      private com.google.protobuf.LazyStringList typeArrayString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTypeArrayStringIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          typeArrayString_ = new com.google.protobuf.LazyStringArrayList(typeArrayString_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public java.util.List<java.lang.String>
          getTypeArrayStringList() {
        return java.util.Collections.unmodifiableList(typeArrayString_);
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public int getTypeArrayStringCount() {
        return typeArrayString_.size();
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public java.lang.String getTypeArrayString(int index) {
        return typeArrayString_.get(index);
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public com.google.protobuf.ByteString
          getTypeArrayStringBytes(int index) {
        return typeArrayString_.getByteString(index);
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public Builder setTypeArrayString(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTypeArrayStringIsMutable();
        typeArrayString_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public Builder addTypeArrayString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTypeArrayStringIsMutable();
        typeArrayString_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public Builder addAllTypeArrayString(
          java.lang.Iterable<java.lang.String> values) {
        ensureTypeArrayStringIsMutable();
        super.addAll(values, typeArrayString_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public Builder clearTypeArrayString() {
        typeArrayString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string type_array_string = 7;</code>
       */
      public Builder addTypeArrayStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTypeArrayStringIsMutable();
        typeArrayString_.add(value);
        onChanged();
        return this;
      }

      // repeated bool type_array_boolean = 8;
      private java.util.List<java.lang.Boolean> typeArrayBoolean_ = java.util.Collections.emptyList();
      private void ensureTypeArrayBooleanIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          typeArrayBoolean_ = new java.util.ArrayList<java.lang.Boolean>(typeArrayBoolean_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool type_array_boolean = 8;</code>
       */
      public java.util.List<java.lang.Boolean>
          getTypeArrayBooleanList() {
        return java.util.Collections.unmodifiableList(typeArrayBoolean_);
      }
      /**
       * <code>repeated bool type_array_boolean = 8;</code>
       */
      public int getTypeArrayBooleanCount() {
        return typeArrayBoolean_.size();
      }
      /**
       * <code>repeated bool type_array_boolean = 8;</code>
       */
      public boolean getTypeArrayBoolean(int index) {
        return typeArrayBoolean_.get(index);
      }
      /**
       * <code>repeated bool type_array_boolean = 8;</code>
       */
      public Builder setTypeArrayBoolean(
          int index, boolean value) {
        ensureTypeArrayBooleanIsMutable();
        typeArrayBoolean_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool type_array_boolean = 8;</code>
       */
      public Builder addTypeArrayBoolean(boolean value) {
        ensureTypeArrayBooleanIsMutable();
        typeArrayBoolean_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool type_array_boolean = 8;</code>
       */
      public Builder addAllTypeArrayBoolean(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureTypeArrayBooleanIsMutable();
        super.addAll(values, typeArrayBoolean_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool type_array_boolean = 8;</code>
       */
      public Builder clearTypeArrayBoolean() {
        typeArrayBoolean_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;
      private org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors typeEnum_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors.RED;
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;</code>
       */
      public boolean hasTypeEnum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors getTypeEnum() {
        return typeEnum_;
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;</code>
       */
      public Builder setTypeEnum(org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        typeEnum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.Colors type_enum = 9;</code>
       */
      public Builder clearTypeEnum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        typeEnum_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.Colors.RED;
        onChanged();
        return this;
      }

      // repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;
      private java.util.List<org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry> typeMap_ =
        java.util.Collections.emptyList();
      private void ensureTypeMapIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          typeMap_ = new java.util.ArrayList<org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry>(typeMap_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder> typeMapBuilder_;

      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public java.util.List<org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry> getTypeMapList() {
        if (typeMapBuilder_ == null) {
          return java.util.Collections.unmodifiableList(typeMap_);
        } else {
          return typeMapBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public int getTypeMapCount() {
        if (typeMapBuilder_ == null) {
          return typeMap_.size();
        } else {
          return typeMapBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry getTypeMap(int index) {
        if (typeMapBuilder_ == null) {
          return typeMap_.get(index);
        } else {
          return typeMapBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder setTypeMap(
          int index, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry value) {
        if (typeMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeMapIsMutable();
          typeMap_.set(index, value);
          onChanged();
        } else {
          typeMapBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder setTypeMap(
          int index, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder builderForValue) {
        if (typeMapBuilder_ == null) {
          ensureTypeMapIsMutable();
          typeMap_.set(index, builderForValue.build());
          onChanged();
        } else {
          typeMapBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder addTypeMap(org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry value) {
        if (typeMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeMapIsMutable();
          typeMap_.add(value);
          onChanged();
        } else {
          typeMapBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder addTypeMap(
          int index, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry value) {
        if (typeMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeMapIsMutable();
          typeMap_.add(index, value);
          onChanged();
        } else {
          typeMapBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder addTypeMap(
          org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder builderForValue) {
        if (typeMapBuilder_ == null) {
          ensureTypeMapIsMutable();
          typeMap_.add(builderForValue.build());
          onChanged();
        } else {
          typeMapBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder addTypeMap(
          int index, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder builderForValue) {
        if (typeMapBuilder_ == null) {
          ensureTypeMapIsMutable();
          typeMap_.add(index, builderForValue.build());
          onChanged();
        } else {
          typeMapBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder addAllTypeMap(
          java.lang.Iterable<? extends org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry> values) {
        if (typeMapBuilder_ == null) {
          ensureTypeMapIsMutable();
          super.addAll(values, typeMap_);
          onChanged();
        } else {
          typeMapBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder clearTypeMap() {
        if (typeMapBuilder_ == null) {
          typeMap_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          typeMapBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public Builder removeTypeMap(int index) {
        if (typeMapBuilder_ == null) {
          ensureTypeMapIsMutable();
          typeMap_.remove(index);
          onChanged();
        } else {
          typeMapBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder getTypeMapBuilder(
          int index) {
        return getTypeMapFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder getTypeMapOrBuilder(
          int index) {
        if (typeMapBuilder_ == null) {
          return typeMap_.get(index);  } else {
          return typeMapBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public java.util.List<? extends org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder> 
           getTypeMapOrBuilderList() {
        if (typeMapBuilder_ != null) {
          return typeMapBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(typeMap_);
        }
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder addTypeMapBuilder() {
        return getTypeMapFieldBuilder().addBuilder(
            org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder addTypeMapBuilder(
          int index) {
        return getTypeMapFieldBuilder().addBuilder(
            index, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.flink.formats.protobuf.generated.MapFieldEntry type_map = 10;</code>
       */
      public java.util.List<org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder> 
           getTypeMapBuilderList() {
        return getTypeMapFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder> 
          getTypeMapFieldBuilder() {
        if (typeMapBuilder_ == null) {
          typeMapBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder>(
                  typeMap_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          typeMap_ = null;
        }
        return typeMapBuilder_;
      }

      // required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;
      private org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue typeUnion_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue, org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValueOrBuilder> typeUnionBuilder_;
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      public boolean hasTypeUnion() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue getTypeUnion() {
        if (typeUnionBuilder_ == null) {
          return typeUnion_;
        } else {
          return typeUnionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      public Builder setTypeUnion(org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue value) {
        if (typeUnionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeUnion_ = value;
          onChanged();
        } else {
          typeUnionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      public Builder setTypeUnion(
          org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.Builder builderForValue) {
        if (typeUnionBuilder_ == null) {
          typeUnion_ = builderForValue.build();
          onChanged();
        } else {
          typeUnionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      public Builder mergeTypeUnion(org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue value) {
        if (typeUnionBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              typeUnion_ != org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.getDefaultInstance()) {
            typeUnion_ =
              org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.newBuilder(typeUnion_).mergeFrom(value).buildPartial();
          } else {
            typeUnion_ = value;
          }
          onChanged();
        } else {
          typeUnionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      public Builder clearTypeUnion() {
        if (typeUnionBuilder_ == null) {
          typeUnion_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.getDefaultInstance();
          onChanged();
        } else {
          typeUnionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.Builder getTypeUnionBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getTypeUnionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValueOrBuilder getTypeUnionOrBuilder() {
        if (typeUnionBuilder_ != null) {
          return typeUnionBuilder_.getMessageOrBuilder();
        } else {
          return typeUnion_;
        }
      }
      /**
       * <code>required .org.apache.flink.formats.protobuf.generated.OneOfValue type_union = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue, org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValueOrBuilder> 
          getTypeUnionFieldBuilder() {
        if (typeUnionBuilder_ == null) {
          typeUnionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue, org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValueOrBuilder>(
                  typeUnion_,
                  getParentForChildren(),
                  isClean());
          typeUnion_ = null;
        }
        return typeUnionBuilder_;
      }

      // optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;
      private org.apache.flink.formats.protobuf.generated.UserProtobuf.Address typeNested_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.apache.flink.formats.protobuf.generated.UserProtobuf.Address, org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.AddressOrBuilder> typeNestedBuilder_;
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      public boolean hasTypeNested() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.Address getTypeNested() {
        if (typeNestedBuilder_ == null) {
          return typeNested_;
        } else {
          return typeNestedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      public Builder setTypeNested(org.apache.flink.formats.protobuf.generated.UserProtobuf.Address value) {
        if (typeNestedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeNested_ = value;
          onChanged();
        } else {
          typeNestedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      public Builder setTypeNested(
          org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.Builder builderForValue) {
        if (typeNestedBuilder_ == null) {
          typeNested_ = builderForValue.build();
          onChanged();
        } else {
          typeNestedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      public Builder mergeTypeNested(org.apache.flink.formats.protobuf.generated.UserProtobuf.Address value) {
        if (typeNestedBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              typeNested_ != org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.getDefaultInstance()) {
            typeNested_ =
              org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.newBuilder(typeNested_).mergeFrom(value).buildPartial();
          } else {
            typeNested_ = value;
          }
          onChanged();
        } else {
          typeNestedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      public Builder clearTypeNested() {
        if (typeNestedBuilder_ == null) {
          typeNested_ = org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.getDefaultInstance();
          onChanged();
        } else {
          typeNestedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.Builder getTypeNestedBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getTypeNestedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      public org.apache.flink.formats.protobuf.generated.UserProtobuf.AddressOrBuilder getTypeNestedOrBuilder() {
        if (typeNestedBuilder_ != null) {
          return typeNestedBuilder_.getMessageOrBuilder();
        } else {
          return typeNested_;
        }
      }
      /**
       * <code>optional .org.apache.flink.formats.protobuf.generated.Address type_nested = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.apache.flink.formats.protobuf.generated.UserProtobuf.Address, org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.AddressOrBuilder> 
          getTypeNestedFieldBuilder() {
        if (typeNestedBuilder_ == null) {
          typeNestedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.apache.flink.formats.protobuf.generated.UserProtobuf.Address, org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.Builder, org.apache.flink.formats.protobuf.generated.UserProtobuf.AddressOrBuilder>(
                  typeNested_,
                  getParentForChildren(),
                  isClean());
          typeNested_ = null;
        }
        return typeNestedBuilder_;
      }

      // required bytes type_bytes = 13;
      private com.google.protobuf.ByteString typeBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes type_bytes = 13;</code>
       */
      public boolean hasTypeBytes() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required bytes type_bytes = 13;</code>
       */
      public com.google.protobuf.ByteString getTypeBytes() {
        return typeBytes_;
      }
      /**
       * <code>required bytes type_bytes = 13;</code>
       */
      public Builder setTypeBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        typeBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes type_bytes = 13;</code>
       */
      public Builder clearTypeBytes() {
        bitField0_ = (bitField0_ & ~0x00001000);
        typeBytes_ = getDefaultInstance().getTypeBytes();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.apache.flink.formats.protobuf.generated.User)
    }

    static {
      defaultInstance = new User(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.formats.protobuf.generated.User)
  }

  public interface OneOfValueOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool bool_value = 1;
    /**
     * <code>optional bool bool_value = 1;</code>
     */
    boolean hasBoolValue();
    /**
     * <code>optional bool bool_value = 1;</code>
     */
    boolean getBoolValue();

    // optional int64 long_value = 2;
    /**
     * <code>optional int64 long_value = 2;</code>
     */
    boolean hasLongValue();
    /**
     * <code>optional int64 long_value = 2;</code>
     */
    long getLongValue();

    // optional double double_value = 3;
    /**
     * <code>optional double double_value = 3;</code>
     */
    boolean hasDoubleValue();
    /**
     * <code>optional double double_value = 3;</code>
     */
    double getDoubleValue();
  }
  /**
   * Protobuf type {@code org.apache.flink.formats.protobuf.generated.OneOfValue}
   */
  public static final class OneOfValue extends
      com.google.protobuf.GeneratedMessage
      implements OneOfValueOrBuilder {
    // Use OneOfValue.newBuilder() to construct.
    private OneOfValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OneOfValue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OneOfValue defaultInstance;
    public static OneOfValue getDefaultInstance() {
      return defaultInstance;
    }

    public OneOfValue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OneOfValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              boolValue_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              longValue_ = input.readInt64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              doubleValue_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.class, org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.Builder.class);
    }

    public static com.google.protobuf.Parser<OneOfValue> PARSER =
        new com.google.protobuf.AbstractParser<OneOfValue>() {
      public OneOfValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OneOfValue(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OneOfValue> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool bool_value = 1;
    public static final int BOOL_VALUE_FIELD_NUMBER = 1;
    private boolean boolValue_;
    /**
     * <code>optional bool bool_value = 1;</code>
     */
    public boolean hasBoolValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool bool_value = 1;</code>
     */
    public boolean getBoolValue() {
      return boolValue_;
    }

    // optional int64 long_value = 2;
    public static final int LONG_VALUE_FIELD_NUMBER = 2;
    private long longValue_;
    /**
     * <code>optional int64 long_value = 2;</code>
     */
    public boolean hasLongValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 long_value = 2;</code>
     */
    public long getLongValue() {
      return longValue_;
    }

    // optional double double_value = 3;
    public static final int DOUBLE_VALUE_FIELD_NUMBER = 3;
    private double doubleValue_;
    /**
     * <code>optional double double_value = 3;</code>
     */
    public boolean hasDoubleValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double double_value = 3;</code>
     */
    public double getDoubleValue() {
      return doubleValue_;
    }

    private void initFields() {
      boolValue_ = false;
      longValue_ = 0L;
      doubleValue_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, boolValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, longValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, doubleValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, boolValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, longValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, doubleValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.formats.protobuf.generated.OneOfValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.class, org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.Builder.class);
      }

      // Construct using org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        boolValue_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        longValue_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        doubleValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_descriptor;
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue getDefaultInstanceForType() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.getDefaultInstance();
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue build() {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue buildPartial() {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue result = new org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.boolValue_ = boolValue_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.longValue_ = longValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.doubleValue_ = doubleValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue) {
          return mergeFrom((org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue other) {
        if (other == org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue.getDefaultInstance()) return this;
        if (other.hasBoolValue()) {
          setBoolValue(other.getBoolValue());
        }
        if (other.hasLongValue()) {
          setLongValue(other.getLongValue());
        }
        if (other.hasDoubleValue()) {
          setDoubleValue(other.getDoubleValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.flink.formats.protobuf.generated.UserProtobuf.OneOfValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool bool_value = 1;
      private boolean boolValue_ ;
      /**
       * <code>optional bool bool_value = 1;</code>
       */
      public boolean hasBoolValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool bool_value = 1;</code>
       */
      public boolean getBoolValue() {
        return boolValue_;
      }
      /**
       * <code>optional bool bool_value = 1;</code>
       */
      public Builder setBoolValue(boolean value) {
        bitField0_ |= 0x00000001;
        boolValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bool_value = 1;</code>
       */
      public Builder clearBoolValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        boolValue_ = false;
        onChanged();
        return this;
      }

      // optional int64 long_value = 2;
      private long longValue_ ;
      /**
       * <code>optional int64 long_value = 2;</code>
       */
      public boolean hasLongValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 long_value = 2;</code>
       */
      public long getLongValue() {
        return longValue_;
      }
      /**
       * <code>optional int64 long_value = 2;</code>
       */
      public Builder setLongValue(long value) {
        bitField0_ |= 0x00000002;
        longValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 long_value = 2;</code>
       */
      public Builder clearLongValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        longValue_ = 0L;
        onChanged();
        return this;
      }

      // optional double double_value = 3;
      private double doubleValue_ ;
      /**
       * <code>optional double double_value = 3;</code>
       */
      public boolean hasDoubleValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double double_value = 3;</code>
       */
      public double getDoubleValue() {
        return doubleValue_;
      }
      /**
       * <code>optional double double_value = 3;</code>
       */
      public Builder setDoubleValue(double value) {
        bitField0_ |= 0x00000004;
        doubleValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double double_value = 3;</code>
       */
      public Builder clearDoubleValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        doubleValue_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.apache.flink.formats.protobuf.generated.OneOfValue)
    }

    static {
      defaultInstance = new OneOfValue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.formats.protobuf.generated.OneOfValue)
  }

  public interface AddressOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 num = 1;
    /**
     * <code>required int32 num = 1;</code>
     */
    boolean hasNum();
    /**
     * <code>required int32 num = 1;</code>
     */
    int getNum();

    // required string street = 2;
    /**
     * <code>required string street = 2;</code>
     */
    boolean hasStreet();
    /**
     * <code>required string street = 2;</code>
     */
    java.lang.String getStreet();
    /**
     * <code>required string street = 2;</code>
     */
    com.google.protobuf.ByteString
        getStreetBytes();

    // required string city = 3;
    /**
     * <code>required string city = 3;</code>
     */
    boolean hasCity();
    /**
     * <code>required string city = 3;</code>
     */
    java.lang.String getCity();
    /**
     * <code>required string city = 3;</code>
     */
    com.google.protobuf.ByteString
        getCityBytes();

    // required string state = 4;
    /**
     * <code>required string state = 4;</code>
     */
    boolean hasState();
    /**
     * <code>required string state = 4;</code>
     */
    java.lang.String getState();
    /**
     * <code>required string state = 4;</code>
     */
    com.google.protobuf.ByteString
        getStateBytes();

    // required string zip = 5;
    /**
     * <code>required string zip = 5;</code>
     */
    boolean hasZip();
    /**
     * <code>required string zip = 5;</code>
     */
    java.lang.String getZip();
    /**
     * <code>required string zip = 5;</code>
     */
    com.google.protobuf.ByteString
        getZipBytes();
  }
  /**
   * Protobuf type {@code org.apache.flink.formats.protobuf.generated.Address}
   */
  public static final class Address extends
      com.google.protobuf.GeneratedMessage
      implements AddressOrBuilder {
    // Use Address.newBuilder() to construct.
    private Address(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Address(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Address defaultInstance;
    public static Address getDefaultInstance() {
      return defaultInstance;
    }

    public Address getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Address(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              num_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              street_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              city_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              state_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              zip_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_Address_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_Address_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.class, org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.Builder.class);
    }

    public static com.google.protobuf.Parser<Address> PARSER =
        new com.google.protobuf.AbstractParser<Address>() {
      public Address parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Address(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Address> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 num = 1;
    public static final int NUM_FIELD_NUMBER = 1;
    private int num_;
    /**
     * <code>required int32 num = 1;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 num = 1;</code>
     */
    public int getNum() {
      return num_;
    }

    // required string street = 2;
    public static final int STREET_FIELD_NUMBER = 2;
    private java.lang.Object street_;
    /**
     * <code>required string street = 2;</code>
     */
    public boolean hasStreet() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string street = 2;</code>
     */
    public java.lang.String getStreet() {
      java.lang.Object ref = street_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          street_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string street = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStreetBytes() {
      java.lang.Object ref = street_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        street_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string city = 3;
    public static final int CITY_FIELD_NUMBER = 3;
    private java.lang.Object city_;
    /**
     * <code>required string city = 3;</code>
     */
    public boolean hasCity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string city = 3;</code>
     */
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          city_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string city = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string state = 4;
    public static final int STATE_FIELD_NUMBER = 4;
    private java.lang.Object state_;
    /**
     * <code>required string state = 4;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string state = 4;</code>
     */
    public java.lang.String getState() {
      java.lang.Object ref = state_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          state_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string state = 4;</code>
     */
    public com.google.protobuf.ByteString
        getStateBytes() {
      java.lang.Object ref = state_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        state_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string zip = 5;
    public static final int ZIP_FIELD_NUMBER = 5;
    private java.lang.Object zip_;
    /**
     * <code>required string zip = 5;</code>
     */
    public boolean hasZip() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string zip = 5;</code>
     */
    public java.lang.String getZip() {
      java.lang.Object ref = zip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          zip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string zip = 5;</code>
     */
    public com.google.protobuf.ByteString
        getZipBytes() {
      java.lang.Object ref = zip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      num_ = 0;
      street_ = "";
      city_ = "";
      state_ = "";
      zip_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStreet()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZip()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, num_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getStreetBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getCityBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getStateBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getZipBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, num_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getStreetBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCityBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getStateBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getZipBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.apache.flink.formats.protobuf.generated.UserProtobuf.Address prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.formats.protobuf.generated.Address}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.apache.flink.formats.protobuf.generated.UserProtobuf.AddressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_Address_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_Address_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.class, org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.Builder.class);
      }

      // Construct using org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        street_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        city_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        zip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_Address_descriptor;
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.Address getDefaultInstanceForType() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.getDefaultInstance();
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.Address build() {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.Address result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.Address buildPartial() {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.Address result = new org.apache.flink.formats.protobuf.generated.UserProtobuf.Address(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.num_ = num_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.street_ = street_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.city_ = city_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.zip_ = zip_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.flink.formats.protobuf.generated.UserProtobuf.Address) {
          return mergeFrom((org.apache.flink.formats.protobuf.generated.UserProtobuf.Address)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.flink.formats.protobuf.generated.UserProtobuf.Address other) {
        if (other == org.apache.flink.formats.protobuf.generated.UserProtobuf.Address.getDefaultInstance()) return this;
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        if (other.hasStreet()) {
          bitField0_ |= 0x00000002;
          street_ = other.street_;
          onChanged();
        }
        if (other.hasCity()) {
          bitField0_ |= 0x00000004;
          city_ = other.city_;
          onChanged();
        }
        if (other.hasState()) {
          bitField0_ |= 0x00000008;
          state_ = other.state_;
          onChanged();
        }
        if (other.hasZip()) {
          bitField0_ |= 0x00000010;
          zip_ = other.zip_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNum()) {
          
          return false;
        }
        if (!hasStreet()) {
          
          return false;
        }
        if (!hasCity()) {
          
          return false;
        }
        if (!hasState()) {
          
          return false;
        }
        if (!hasZip()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.Address parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.flink.formats.protobuf.generated.UserProtobuf.Address) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 num = 1;
      private int num_ ;
      /**
       * <code>required int32 num = 1;</code>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 num = 1;</code>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>required int32 num = 1;</code>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000001;
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 num = 1;</code>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        onChanged();
        return this;
      }

      // required string street = 2;
      private java.lang.Object street_ = "";
      /**
       * <code>required string street = 2;</code>
       */
      public boolean hasStreet() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string street = 2;</code>
       */
      public java.lang.String getStreet() {
        java.lang.Object ref = street_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          street_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string street = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStreetBytes() {
        java.lang.Object ref = street_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          street_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string street = 2;</code>
       */
      public Builder setStreet(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        street_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string street = 2;</code>
       */
      public Builder clearStreet() {
        bitField0_ = (bitField0_ & ~0x00000002);
        street_ = getDefaultInstance().getStreet();
        onChanged();
        return this;
      }
      /**
       * <code>required string street = 2;</code>
       */
      public Builder setStreetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        street_ = value;
        onChanged();
        return this;
      }

      // required string city = 3;
      private java.lang.Object city_ = "";
      /**
       * <code>required string city = 3;</code>
       */
      public boolean hasCity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string city = 3;</code>
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string city = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string city = 3;</code>
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        city_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string city = 3;</code>
       */
      public Builder clearCity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        city_ = getDefaultInstance().getCity();
        onChanged();
        return this;
      }
      /**
       * <code>required string city = 3;</code>
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        city_ = value;
        onChanged();
        return this;
      }

      // required string state = 4;
      private java.lang.Object state_ = "";
      /**
       * <code>required string state = 4;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string state = 4;</code>
       */
      public java.lang.String getState() {
        java.lang.Object ref = state_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          state_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string state = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStateBytes() {
        java.lang.Object ref = state_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          state_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string state = 4;</code>
       */
      public Builder setState(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string state = 4;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = getDefaultInstance().getState();
        onChanged();
        return this;
      }
      /**
       * <code>required string state = 4;</code>
       */
      public Builder setStateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        state_ = value;
        onChanged();
        return this;
      }

      // required string zip = 5;
      private java.lang.Object zip_ = "";
      /**
       * <code>required string zip = 5;</code>
       */
      public boolean hasZip() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string zip = 5;</code>
       */
      public java.lang.String getZip() {
        java.lang.Object ref = zip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          zip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string zip = 5;</code>
       */
      public com.google.protobuf.ByteString
          getZipBytes() {
        java.lang.Object ref = zip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string zip = 5;</code>
       */
      public Builder setZip(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        zip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string zip = 5;</code>
       */
      public Builder clearZip() {
        bitField0_ = (bitField0_ & ~0x00000010);
        zip_ = getDefaultInstance().getZip();
        onChanged();
        return this;
      }
      /**
       * <code>required string zip = 5;</code>
       */
      public Builder setZipBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        zip_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.apache.flink.formats.protobuf.generated.Address)
    }

    static {
      defaultInstance = new Address(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.formats.protobuf.generated.Address)
  }

  public interface MapFieldEntryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string key = 1;
    /**
     * <code>required string key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>required string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    // required int64 value = 2;
    /**
     * <code>required int64 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required int64 value = 2;</code>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code org.apache.flink.formats.protobuf.generated.MapFieldEntry}
   */
  public static final class MapFieldEntry extends
      com.google.protobuf.GeneratedMessage
      implements MapFieldEntryOrBuilder {
    // Use MapFieldEntry.newBuilder() to construct.
    private MapFieldEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapFieldEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapFieldEntry defaultInstance;
    public static MapFieldEntry getDefaultInstance() {
      return defaultInstance;
    }

    public MapFieldEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapFieldEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              key_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.class, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<MapFieldEntry> PARSER =
        new com.google.protobuf.AbstractParser<MapFieldEntry>() {
      public MapFieldEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapFieldEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapFieldEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    /**
     * <code>required string key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private long value_;
    /**
     * <code>required int64 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 value = 2;</code>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      key_ = "";
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.formats.protobuf.generated.MapFieldEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.class, org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.Builder.class);
      }

      // Construct using org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_descriptor;
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry getDefaultInstanceForType() {
        return org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.getDefaultInstance();
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry build() {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry buildPartial() {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry result = new org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry) {
          return mergeFrom((org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry other) {
        if (other == org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.flink.formats.protobuf.generated.UserProtobuf.MapFieldEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string key = 1;
      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      // required int64 value = 2;
      private long value_ ;
      /**
       * <code>required int64 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 value = 2;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>required int64 value = 2;</code>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.apache.flink.formats.protobuf.generated.MapFieldEntry)
    }

    static {
      defaultInstance = new MapFieldEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.formats.protobuf.generated.MapFieldEntry)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_formats_protobuf_generated_User_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_apache_flink_formats_protobuf_generated_User_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_formats_protobuf_generated_Address_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_apache_flink_formats_protobuf_generated_Address_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nuser.proto\022+org.apache.flink.formats.p" +
      "rotobuf.generated\"\210\004\n\004User\022\014\n\004name\030\001 \002(\t" +
      "\022\027\n\017favorite_number\030\002 \001(\005\022\026\n\016favorite_co" +
      "lor\030\003 \001(\t\022\026\n\016type_long_test\030\004 \001(\003\022\030\n\020typ" +
      "e_double_test\030\005 \002(\001\022\026\n\016type_bool_test\030\006 " +
      "\001(\010\022\031\n\021type_array_string\030\007 \003(\t\022\032\n\022type_a" +
      "rray_boolean\030\010 \003(\010\022F\n\ttype_enum\030\t \002(\01623." +
      "org.apache.flink.formats.protobuf.genera" +
      "ted.Colors\022L\n\010type_map\030\n \003(\0132:.org.apach" +
      "e.flink.formats.protobuf.generated.MapFi",
      "eldEntry\022K\n\ntype_union\030\013 \002(\01327.org.apach" +
      "e.flink.formats.protobuf.generated.OneOf" +
      "Value\022I\n\013type_nested\030\014 \001(\01324.org.apache." +
      "flink.formats.protobuf.generated.Address" +
      "\022\022\n\ntype_bytes\030\r \002(\014\"J\n\nOneOfValue\022\022\n\nbo" +
      "ol_value\030\001 \001(\010\022\022\n\nlong_value\030\002 \001(\003\022\024\n\014do" +
      "uble_value\030\003 \001(\001\"P\n\007Address\022\013\n\003num\030\001 \002(\005" +
      "\022\016\n\006street\030\002 \002(\t\022\014\n\004city\030\003 \002(\t\022\r\n\005state\030" +
      "\004 \002(\t\022\013\n\003zip\030\005 \002(\t\"+\n\rMapFieldEntry\022\013\n\003k" +
      "ey\030\001 \002(\t\022\r\n\005value\030\002 \002(\003*&\n\006Colors\022\007\n\003RED",
      "\020\000\022\t\n\005GREEN\020\001\022\010\n\004BLUE\020\002B\016B\014UserProtobuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_apache_flink_formats_protobuf_generated_User_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_apache_flink_formats_protobuf_generated_User_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_apache_flink_formats_protobuf_generated_User_descriptor,
              new java.lang.String[] { "Name", "FavoriteNumber", "FavoriteColor", "TypeLongTest", "TypeDoubleTest", "TypeBoolTest", "TypeArrayString", "TypeArrayBoolean", "TypeEnum", "TypeMap", "TypeUnion", "TypeNested", "TypeBytes", });
          internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_apache_flink_formats_protobuf_generated_OneOfValue_descriptor,
              new java.lang.String[] { "BoolValue", "LongValue", "DoubleValue", });
          internal_static_org_apache_flink_formats_protobuf_generated_Address_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_apache_flink_formats_protobuf_generated_Address_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_apache_flink_formats_protobuf_generated_Address_descriptor,
              new java.lang.String[] { "Num", "Street", "City", "State", "Zip", });
          internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_apache_flink_formats_protobuf_generated_MapFieldEntry_descriptor,
              new java.lang.String[] { "Key", "Value", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
